#!/data/data/com.termux/files/usr/bin/bash

echo -e "\e[93m
 â•­â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â•®
 |  This  script  will  install  all  |
 |  the requirements for installing   |
 |  Neovim text editor on Termux ðŸ¤—   |
 â•°â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â•¯
\e[97m
 This will take a while, depends on your network speed
 hit <ENTER> to continue.
\e[0m"
read

apt install neovim python nodejs clangd -y
apt install neovim python nodejs clangd -y
apt install python-pip -y
echo preparing pip...please wait
python -m pip install --upgrade pip
python -m pip install pynvim pylint jedi
echo 
echo Almost done.. be patient!
echo preparing npm for coc.nvim:
npm i -g npm
npm i -g neovim
npm i coc-python coc-marketplace coc-actions --global-style --ignore-scripts --no-bin-links --no-package-lock --only=prod
mv $HOME/.config/nvim $HOME/.config/nvim.old
mkdir -p $HOME/.config/nvim
cp -r * $HOME/.config/nvim
rm $HOME/.config/nvim/install
ln -s $HOME/../usr/bin/nvim $HOME/../usr/bin/v
nvim --headless +PlugInstall +qall > /dev/null 2>&1


echo -e "\e[92m
Successfully installed the dependencies!
Now you're ready to go! 
Type 'v' to try.

\e[93mNOTE: It will automatically install the plugins on the first run. Then restart neovim...
After that you can install any completion-plugins manually by typing :CocInstall <coc-plugins>
"
